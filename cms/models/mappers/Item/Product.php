<?phpclass Cms_Model_Mapper_Item_Product{    protected $_dbTable;    public function setDbTable($dbTable)    {        if (is_string($dbTable))        {            $dbTable = new $dbTable();        }        if (!$dbTable instanceof Zend_Db_Table_Abstract)        {            throw new Exception('Invalid table data gateway provided');        }        $this->_dbTable = $dbTable;        return $this;    }    public function getDbTable()    {        if (null === $this->_dbTable)        {            $this->setDbTable('Cms_Model_DbTable_Products');        }        return $this->_dbTable;    }	public function save(Cms_Model_Item_Product $product)	{		$parametersTable = new Cms_Model_DbTable_Product_Parameters();		$dbAdapter = $this->getDbTable()->getAdapter();		$data = array(			'name'			=> $product->getName(),            'description'	=> $product->getDescription(),			'status'		=> $product->getStatus()		);		if(null === ($id = $product->getId()))		{			// nowy			$data['created'] = new Zend_Db_Expr('NOW()');			$id = $this->getDbTable()->insert( $data );			$product->setId( $id );        } else {        	// edycja			$this->getDbTable()->update( $data, $dbAdapter->quoteInto('id = ?', $id) );			$parametersTable->delete( $dbAdapter->quoteInto('idProduct = ?', $id) ); // czyszcze parametry		}		// parametry		foreach( $product->getParameters() as $parameter )		{			$value = trim( $parameter->getValue() );			if( !empty($value) )			{				$parametersTable->insert( array(					'idProduct'		=> $id,					'idParameter'	=> $parameter->getId(),					'value'			=> $value				) );			}		}		return $this;	}    public function find( $id, Cms_Model_Item_Product $product )    {        $result = $this->getDbTable()->find($id);        if (0 == count($result))        {            return false;        }        $row = $result->current();        $product->setId( $row->id )        	->setName( $row->name )			->setDescription( $row->description )			->setStatus( $row->status )			->setCreated( $row->created )			->setModified( $row->modified );		// parametry		$parameters = array();		foreach( $row->findDependentRowset('Cms_Model_DbTable_Product_Parameters')->toArray() as $parameter )		{			$parameters[] = Cms_Model_Item_Parameter::factory($parameter['idParameter'], array('value' => $parameter['value']) );		}		$product->setParameters($parameters);		return true;    }public function fetchAll( $where = null, $order = null, $limit = null, $page = null )    {    	$select = $this->getDbTable()->select()    		->where( 'status <> 0' );    	if( !empty($where) )     	{    		$select->where( $where );    	}    	if( !empty($order) )    	{    		$select->order($order);    	}    	if( !empty($limit) )    	{    		if( !empty($page) )    		{    			$select->limitPage($page, $limit);    		}    		else     		{    			$select->limit($limit);    		}    	}        $resultSet = $this->getDbTable()->fetchAll( $select );        $entries   = array();        foreach ($resultSet as $row)        {            $entry = new Cms_Model_Item_Product();            $entry->setId( $row->id )            	->setName( $row->name )				->setDescription( $row->description )				->setStatus( $row->status )				->setCreated( $row->created )				->setModified( $row->modified );            $entries[] = $entry;        }        return $entries;    }	public function countAll( $where = null )    {		$select = $this->getDbTable()->select()			->from( $this->getDbTable(), array( 'n' => 'COUNT(*)' ) )    		->where( 'status <> 0' );    	if( !empty($where) )     	{    		$select->where( $where );    	}        $result = $this->getDbTable()->fetchRow( $select );        return (int) $result->n;    }        /**     * Ustawia status Produktu na 0 - czyli Kosz     *     * @param Cms_Model_Item_Product $product     */	public function delete( Cms_Model_Item_Product $product )    {		$dbTable = $this->getDbTable();    	// Product    	$where = $dbTable->getAdapter()->quoteInto( 'id = ?', $product->getId() );    	return (bool)$dbTable->update(array('status' => 0), $where);    }    /**     * Usuwa Produkt calkowicie z systemu     * Uwaga - proces nieodwracalny!     *     * @param Cms_Model_Item_Product $product     */    public function purge( Cms_Model_Item_Product $product )    {    	$dbTable = $this->getDbTable();    	$parametersTable = new Cms_Model_DbTable_Product_Parameters();    	$where = $dbTable->getAdapter()->quoteInto( 'idProduct = ?', $product->getId() );    	$parametersTable->delete( $where );		// Product    	$where = $dbTable->getAdapter()->quoteInto( 'id = ?', $product->getId() );    	return (bool)$dbTable->delete( $where );    }}