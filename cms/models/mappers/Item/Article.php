<?phpclass Cms_Model_Mapper_Item_Article{    protected $_dbTable;    public function setDbTable($dbTable)    {        if (is_string($dbTable))        {            $dbTable = new $dbTable();        }        if (!$dbTable instanceof Zend_Db_Table_Abstract)        {            throw new Exception('Invalid table data gateway provided');        }        $this->_dbTable = $dbTable;        return $this;    }    public function getDbTable()    {        if (null === $this->_dbTable)        {            $this->setDbTable('Cms_Model_DbTable_Articles');        }        return $this->_dbTable;    }	public function save(Cms_Model_Item_Article $article)	{		$dbAdapter = $this->getDbTable()->getAdapter();		$data = array(			'name'			=> $article->getName(),            'description'	=> $article->getDescription(),			'text'			=> $article->getText(),			'status'		=> $article->getStatus()		);		if(null === ($id = $article->getId()))		{			// nowy						// tworze strone			$page = new Cms_Model_Page();			$page->setLabel( $data['name'] );			$page->setUri( Cms_Model_Page::normalizeUrl($data['name']) . '/' );			$page->setController('article');			$page->setAction('index');			$pageMapper = new Cms_Model_Mapper_Page();			$pageMapper->save($page);						$data['idPage'] = $page->getId();			$data['created'] = new Zend_Db_Expr('NOW()');			$data['idAuthor'] = Zend_Registry::get('user')->getId();			$id = $this->getDbTable()->insert( $data );			$article->setId( $id );        } else {        	// edycja			$this->getDbTable()->update( $data, $dbAdapter->quoteInto('id = ?', $id) );		}		return $this;	}    public function find( $id, Cms_Model_Item_Article $article )    {        $result = $this->getDbTable()->find($id);        if (0 == count($result))        {            return false;        }        $row = $result->current();        $article->setId( $row->id )        	->setIdPage( $row->idPage )        	->setName( $row->name )			->setDescription( $row->description )			->setText( $row->text )			->setIdAuthor( $row->idAuthor )			->setStatus( $row->status )			->setCreated( $row->created );		return true;    }    public function fetchAll( $where = null )    {    	$select = $this->getDbTable()->select()    		->where( 'status = 1' );    	if( !empty($where) )     	{    		$select->where( $where );    	}        $resultSet = $this->getDbTable()->fetchAll( $select );        $entries   = array();        foreach ($resultSet as $row)        {            $entry = new Cms_Model_Item_Article();            $entry->setId( $row->id )            	->setIdPage( $row->idPage )            	->setName( $row->name )				->setDescription( $row->description )				->setText( $row->text )				->setIdAuthor( $row->idAuthor )				->setStatus( $row->status )				->setStatus( $row->status )				->setCreated( $row->created );            $entries[] = $entry;        }        return $entries;    }        /**     * Ustawia status Produktu na 0 - czyli Kosz     *     * @param Cms_Model_Item_Article $article     */	public function delete( Cms_Model_Item_Article $article )    {		$dbTable = $this->getDbTable();    	// Product    	$where = $dbTable->getAdapter()->quoteInto( 'id = ?', $article->getId() );    	return (bool)$dbTable->update(array('status' => 0), $where);    }    /**     * Usuwa Produkt calkowicie z systemu     * Uwaga - proces nieodwracalny!     *     * @param Cms_Model_Item_Article $article     */    public function purge( Cms_Model_Item_Article $article )    {    	$dbTable = $this->getDbTable();    	$where = $dbTable->getAdapter()->quoteInto( 'id = ?', $article->getId() );    	return (bool)$dbTable->delete( $where );    }}